service: mlag
keys:
  - systemId
show-fields:
  - systemId
  - state
  - peerAddress
  - role
  - peerLink
  - mlagInterfaces
apply:
  cumulus:
    version: all
    command: 'if [ -f "/etc/default/clagd" ]; then net show clag json; else echo {}; fi'
    normalize: '[
    "status/peerAlive: state?True=active|inactive",
    "status/sysMac: systemId",
    "status/peerIp: peerAddress",
    "status/ourRole: role",
    "status/peerRole: peerRole",
    "status/peerId: peerMacAddress",
    "status/peerIf: peerLink",
    "peerLinkStatus: peerLinkStatus?|NA",
    "status/backupActive: backupActive?True=true|false",
    "status/backupIp: backupIP",
    "status/domainId: domainId?|NA",
    "status/vxlanAnycast: vtepIP",
    "clagIntfs: mlagInterfacesList",
    ]'
  eos:
    version: all
    command: show mlag detail
    normalize: '[
    "state: state?|disabled",
    "systemId: systemId",
    "peerAddress: peerAddress",
    "status/peerRole: peerRole",
    "detail/peerMacAddress: peerMacAddress",
    "peerLinkStatus: peerLinkStatus",
    "dualPrimaryDetectionState: backupActive?|NA",
    "backupIP: backupIP?|NA",
    "domainId: domainId",
    "vxlanAnycast: vtepIP?|NA",
    "portsErrDisabled: portsErrDisabled",
    "detail/mlagState: role",
    "mlagPorts/Disabled: mlagErrorPortsCnt?|0",
    "mlagPorts/Active-partial: mlagSinglePortsCnt?|0",
    "mlagPorts/Active-full: mlagDualPortsCnt?|0",
    "mlagPorts/Inactive: mlagErrorPortsCnt+mlagErrorPortsCnt",
    "configSanity: configSanity"]'
